global bool OPG_AIZBombing

// Have the firebombing sequence playout like it does in Origins
// part 1
//# address-hook(0x0685b8) end(0x0685b8)
function void fn0685b8()
{
    if (Mods.isModActive("Stone 3 A.I.R.") || !OPG_AIZBombing)
    {
        base.fn0685b8()
        return
    }

	base.fn0685b8()
	if (objA0.position.y.u16 >= 0x307)
		player1.control_override = player2.control_override = 0 // Have the players regain control
	else
	{
		player2.control_override = 0xff // Disable P2's controls
		control.tails = 0x0101
		A2 = 0xffffb04a
		if (u8[A2 + 0x2f] != 0) // If Tails is flying, have him fall to the ground
		{
			u8[A2 + 0x2f] = 0
			u8[A2 + 0x20] = char.state.ROLLING
			u8[A2 + 0x40] = 0
		}

		u8[A2 + 0x04] &= ~render_flag.FLIP_X
		u8[A2 + 0x2a] &= ~char.flag.FACING_LEFT

	}
}

// part 2
//# address-hook(0x06852c) end(0x068550)
function void fn06852c()
{
    if (Mods.isModActive("Stone 3 A.I.R.") || !OPG_AIZBombing)
    {
        base.fn06852c()
        return
    }
#if STANDALONE
	// Extend level chunks a bit
	u8[0xffff82ce] = u8[0xffff82cd]
	u8[0xffff832f] = u8[0xffff832e]
	u8[0xffff8390] = u8[0xffff838f]
#endif

	D5.u16 = 0x2f10
	if (camera.position.x.u16 < D5.u16)
	{
	#if STANDALONE
		// Set right border here already to prevent camera going too far for one frame
		move_area.right = D5.u16 + (getScreenWidth() - 320)
	#endif
		return
	}

	if (Mods.isModActive("Speed up AIZ fire bombing"))
	{
	#if STANDALONE
		Game.startSkippableCutscene()
	#endif
	}

	player1.control_override = 0xff // Disable P1's controls
	control.player1 = 0

	A1 = 0xffffb000
	if (u8[A1 + 0x2b] & char.bonus.INVINCIBLE) // if player 1 is invincible, tell the game to resume playing the normal act music
		playMusic(MUSIC_CTRL_FADEOUT)

	D0.s16 = objA1.position.x.u16

	if (u8[0xffffb04a + 0x2a] & char.flag.PUSHING) // Check in case player 2 is pushing against something
		control.player2 = control.tails = 0x4040

	if (abs(D0.s16) == 12259)
	{
		StopObjectA1()

		objA1.render_flags &= ~render_flag.FLIP_X
		u8[A1 + 0x2a] &= ~char.flag.FACING_LEFT

		control.player1 = 0x0101		// CONTROL_UP, CONTROL_UP
		
		base.fn06852c()
	}
	else
	{
		D1 = (D0.s16 > 12259) ? 2 : 3		// CONTROL_LEFT : CONTROL_RIGHT
		control.player1.state |= (1 << D1.u8)
		if (u8[A1 + 0x2a] & char.flag.PUSHING) // Check in case player 1 is pushing against something
			control.player1 = 0x4040
	}
}

// Make the capsule in AIZ act 2 fly away like in MGZ act 2
//# address-hook(0x0866cc) end(0x0866d4)
function void fn0866cc()
{
    base.fn0866cc()
    if (global.zone_act == 0x0001)
        objA0.base_state = 0x12
}

// Thank you feelinfungal

// Unlock speed when going up the tree in AIZ act 1
//# address-hook(0x01f8b4)
function void fn01f8b4()
{
    s16 objA1.velocity.x_backup = objA1.velocity.x
    base.fn01f8b4()
    objA1.velocity.x = objA1.velocity.x_backup
}

// Makes it so that you can roll under the spikes in the first 
// part of act 1 when it catches fire
//# address-hook(0x023f84) end(0x024022)
function void Spikes.Init()
{
    base.Spikes.Init()
    if (global.zone_act == 0x0001 && global.zone_act.apparent == 0x0000 && objA0.subtype2c == 0x02)
    {
        u16[A0 + 0x38] = 0x3c
        objA0.box_size.y -= 1
    }
}

// The camera during the first boss in AIZ stays locked in-place
//# address-hook(0x068a6e) end(0x068a90)
function void fn068a6e()
{
    D5.u16 = (camera.position.y.u16 >= 0x03a0) ? 0x10c0 : 0x10e0
    D5.u16 -= getScreenExtend()
    A1 = 0xffffb000
    if (objA1.flags2a & char.flag.IN_AIR)
    {
        if (camera.position.y.u16 >= 0x03a0 && camera.position.x.u16 >= D5.u16)
            move_area.right = D5.u16 + (getScreenWidth() - 320)
        return
    }
    if (camera.position.x.u16 >= D5.u16)
        level.vertical_wrap = camera.position.y.u16
    base.fn068a6e()
}

// Monkey Dude coconut fix part 1
//# address-hook(0x08724e) end(0x0872c8)
function void fn08724e()
{
    base.fn08724e()
    if (objA0.subtype2c == 0x08 && objA0.update_address == 0x08744c)
        objA0.sprite_attributes &= ~sprite_attribute.PALETTE.LINE1 // give the coconut the Sonic/Tails palette
}

// Monkey Dude coconut fix part 2
//# address-hook(0x0875b4) end(0x087636)
function void fn0875b4()
{
    base.fn0875b4()
	if (u8[A1 + 0x3c] || !(objA0.flags38 & 0x08))
		return
    objA0.sprite_attributes = (sprite_attribute.PALETTE.LINE1 | 0x0548) // restore the hand's palette line
}

global bool OPG_AIZ2_BG_Pal

// Fix updating level palette in AIZ2 bomber section
//# address-hook(0x00227c) end(0x002332)
function void LevelPaletteUpdate.AIZ2()
{
	if (!OPG_AIZ2_BG_Pal)
	{
		base.LevelPaletteUpdate.AIZ2()
		return
	}

    u16 camerabackup = camera.position.x.u16
    if (global.zone_act.apparent == 0x0001)
        camera.position.x.u16 = 0x37ff
    base.LevelPaletteUpdate.AIZ2()
    camera.position.x.u16 = camerabackup
}

function void copyPaletteDataFromTable(u8 index, u16 ramAddress)
{
    if (index == 0x30 && global.zone_act.apparent == 0x0001 && OPG_AIZ2_BG_Pal) // Override base game AIZ2 bomber sky palette
        return
    base.copyPaletteDataFromTable(index, ramAddress)
}

function u32 System.loadExternalRawData(string key, u32 targetAddress)
{
    if (kosinski.waiting_modules && global.zone_act.apparent == 0x0001 && OPG_AIZ2_BG_Pal) // Override mods that have a custom AIZ2 bomber sky palette to load (DA Garden as an example)
        return false
    return base.System.loadExternalRawData(key, targetAddress)
}
