include OPG_Characters
include OPG_AIZ
include OPG_HCZ
include OPG_MGZ
include OPG_CNZ
include OPG_ICZ
include OPG_LBZ
include OPG_FBZ
include OPG_MHZ
include OPG_LRZ
include OPG_HPZ
include OPG_SSZ
include OPG_DEZ
include OPG_SlotMachine

global bool OPG_Hangerlook
global bool OPG_KnucklesChuckle

function bool isSawnic() // Check if Sawnic is active
{
    if !u8[0xffffe654] && ((Mods.isModActive("Sawnic") && char.character == CHARACTER_SONIC) || ((Mods.isModActive("SAWNIC & SLUDGLES") && (char.character == CHARACTER_SONIC || char.character == CHARACTER_KNUCKLES))))
        return true
    else
        return false
}

// Play SFX 0x68 when you collect all the chaos emeralds
//# address-hook(0x02e802) end(0x02e832)
function void fn02e802()
{
    bool PlayIt = (A2 == 0x02e918) ? 1 : 0 // Detect if the right address is getting passed in
    base.fn02e802() // run base game code

    // load the address that plays the sound when you get all super emeralds,
    // for when you get all the chaos emeralds
    if (PlayIt)
        objA1.update_address = 0x02e9d8
}

function bool Standalone.onWriteToSpriteTable(s16 px, s16 py, u16 renderQueue)
{
    if (global.game_mode == 0x8c) // Resets some of the counters upon restarting
    {
        SonicGoesToSleepCounter = 0
        // This is related to the pillars in HCZ
        u8[0xffffEF7C] = 0 // P1
        u8[0xffffEF7D] = 0 // P2
        // This is realted to the tops in MGZ
        u8[0xffffEF7E] = 0 // P1
        u8[0xffffEF7F] = 0 // P2
        // Eggbois timer
        OPG_EggTimer = 0
    }

    u64 key = 0
    if (objA0.update_address == 0x067b96 && OPG_Hangerlook)
    {
        if (objA0.subtype2c == 1 && objA0.animation.sprite == 0 && !System.getGlobalVariableValueByName("EggmanBlue.laughTimer"))
        {
            // Who's an egghead, eggface!
            u64 heads = (isMainCharacter(CHARACTER_KNUCKLES)) ? "RoboHead" : ((Mods.isModActive("Blue Glasses Eggman")) ? "EggHead_Blue" : "EggHead")
            if (Renderer.hasCustomSprite(heads))
                Renderer.drawCustomSprite(heads, px, py, 0x00, SPRITE_FLAG_PRIO, renderQueue)
            return true
        }
    }
    else if (objA0.update_address == 0x070c66)
    {
        --objA0.value26
        if (Renderer.hasCustomSprite("TheFBZDoor"))
            Renderer.drawCustomSprite("TheFBZDoor", px, py, 0x00, SPRITE_FLAG_PRIO, renderQueue, objA0.value26, 255)
        return true
    }
    else if (objA0.update_address == 0x204300) //&& global.zone != 0x0c
    {
        if (objA0.subtype2c == 0x04)
        {
            if (Renderer.hasCustomSprite("Shotgun_Mic"))
                Renderer.drawCustomSprite("Shotgun_Mic", px, py, 0x00, SPRITE_FLAG_PRIO, renderQueue)
            return true
        }
        else if (objA0.subtype2c == 0x03)
        {
            u8 boulder_rotate
            if (objA0.state == 0) && !(global.framecounter.low & 0x08)
                boulder_rotate += 0x5a
            if (Renderer.hasCustomSprite("BigBoulderLRZ"))
                Renderer.drawCustomSprite("BigBoulderLRZ", px, ((objA0.state == 0) ? py - 32 : py), 0x00, SPRITE_FLAG_PRIO, renderQueue, boulder_rotate, 255)
                // Renderer.drawCustomSprite("BigBoulderLRZ", px,  ((objA0.state == 0) ? py - 32 : py), 0x00, SPRITE_FLAG_PRIO, renderQueue)
            return true
        }
        else if (objA0.subtype2c == 0x02)
        {
            if (Renderer.hasCustomSprite("Satellite"))
                Renderer.drawCustomSprite("Satellite", px, py, 0x00, SPRITE_FLAG_PRIO, renderQueue + 15)
            return true
        }
        else if (objA0.subtype2c == 0x06)
        {
            key = stringformat("ICZ_Snow_%d", objA0.animation.sprite)
            if (Renderer.hasCustomSprite(key))
                Renderer.drawCustomSprite(key, px, py, 0x00, 0x00, renderQueue + 15)
            return true
        }
        else if (objA0.subtype2c == 0x07)
        {
            Renderer.drawCustomSprite("HPZTeleporter", px, py, 0, 0x00, renderQueue + 15)
		    return true
        }
    }
    else if (objA0.update_address == 0x063a6a && global.zone_act == 0x0901 && OPG_KnucklesChuckle)
	{
        if (objA0.base_state == 0x04)
        {
            ++objA0.value26
            if (objA0.animation.sprite >= 0xd8 && objA0.animation.sprite <= 0xdb)
            {
                Standalone.drawCharacterSpriteDirect(CHARACTER_KNUCKLES, px, py, ((objA0.value26 < 4) ? 0xd7 : objA0.animation.sprite), SPRITE_FLAG_FLIP_X, 0x80, renderQueue)
                return true
            }
        }
        else if (objA0.base_state == 0x06)
        {
            objA0.value26 = 0
            if (objA0.animation.sprite == 0x56)
                objA0.animation.sprite = 0xde

        }
        else if (objA0.base_state == 0x08)
        {
            if (objA0.value26 < 40)
            {
                ++objA0.value26
            }

            if (objA0.value26 >= 8 && objA0.value26 <= 15)
                objA0.animation.sprite = 0xdc
            else if (objA0.value26 >= 16 && objA0.value26 <= 17)
                objA0.animation.sprite = 0xd7
            else if (objA0.value26 >= 18)
            {
                if (objA0.value26 >= 18 && objA0.value26 <= 26)
                {
                    key = "cutscene_knuckles_1_0x1c"
                    if (!Renderer.hasCustomSprite(key))
                        key = Renderer.setupCustomObjectSprite(u32[0x06666a], u32[0x06666a + 4], 0x364016, 0x1c, 0x00)
                }
                else if (objA0.value26 >= 27 && objA0.value26 <= 34)
                {
                    key = "cutscene_knuckles_1_0x1d"
                    if (!Renderer.hasCustomSprite(key))
                        key = Renderer.setupCustomObjectSprite(u32[0x06666a], u32[0x06666a + 4], 0x364016, 0x1d, 0x00)
                }
                else if (objA0.value26 >= 35)
                {
                    u8 knux_anim = ((global.framecounter >> 3) % (2) + 0x1e)
                    key = stringformat("cutscene_knuckles_1_0x%02x", knux_anim)
                    if (!Renderer.hasCustomSprite(key))
                        key = Renderer.setupCustomObjectSprite(u32[0x06666a], u32[0x06666a + 4], 0x364016, knux_anim, 0x00)
                }
                Renderer.drawCustomSprite(key, px, py, 0x80, 0x00, renderQueue)
                return true
            }
        }
        else
            objA0.value26 = 0
	}

    return base.Standalone.onWriteToSpriteTable(px, py, renderQueue)
}

//# address-hook(0x204300)
function void OriginsObjects()
{
    if (objA0.subtype2c == 0x04) // Shotgun Microphone
    {
        MoveWithGravity20()
        UpdateMovementStraightSimple()
        if (global.framecounter & 0x01)
            DrawOrUnloadObject()
    }
    else if (objA0.subtype2c == 0x02) // Broken Dish
    {
        MoveWithGravity20()
        UpdateMovementStraightSimple()
        if (global.framecounter & 0x01)
            DrawOrUnloadObject()
    }
    else if (objA0.subtype2c == 0x03) // Boulder in LRZ boss act
    {
        if (objA0.position.y.u16 > camera.position.y.u16 + getScreenHeight() + 0x20)
			UnloadObject()

        MoveWithGravity20()
        UpdateMovementStraightSimple()

        CheckGroundCollision()

        if (objA0.state == 0)
        {
            if (D1.s16 <= 0)
            {
                objA0.state++
                // This is so that the boulder isn't on the wrong y-axis when it first hits the ground
                objA0.position.y.u16 = 1187

                objA0.velocity.y = -0x200
                camera.screenshake.state = 0x14
                playSound(0x5f)
            }
            if (global.framecounter & 0x02)
                objA0.velocity.y -= 27
        
        }
        else if (objA0.state == 1)
        {
            objA0.position.y.u16 -= D1.s16
            objA0.state++
        }
        
        if (objA0.state > 1)
        {
            if (global.framecounter.low & 0x01)
                DrawOrUnloadObject()
        }
        else
            DrawOrUnloadObject()
    }
    else if (objA0.subtype2c == 0x01) // Starpointer orbiting icy spiked spheres
    {
        if (objA0.position.y.u16 > camera.position.y.u16 + getScreenHeight() + 0x20)
			Object.TriggerUnloading()
        
        setupObjectAttributesBasic(0x08bf9a)
        MoveWithGravity20()
        UpdateMovementStraightSimple()
        if (global.framecounter.low & 0x01)
            DrawOrUnloadObject()
    }
    else if (objA0.subtype2c == 0x05) // Orbinaut orbiting spiked spheres
    {
        if (objA0.position.y.u16 > camera.position.y.u16 + getScreenHeight() + 0x20)
            Object.TriggerUnloading()
        
        setupObjectAttributesBasic(0x08c6fe)
        MoveWithGravity20()
        UpdateMovementStraightSimple()
        if (global.framecounter.low & 0x01)
            DrawOrUnloadObject()
    }
    else if (objA0.subtype2c == 0x06) // Snow graphic at the beginning of ICZ act 1
    {
        if (objA0.animation.sprite >= 8)
            UnloadObject()

        ++objA0.animation.timer
		if (objA0.animation.timer > 5)
		{
			if (objA0.animation.sprite < 8)
				++objA0.animation.sprite
			else
				objA0.animation.sprite = 0
				
			objA0.animation.timer = 0
		}
        DrawOrUnloadObject()
    }
    else if (objA0.subtype2c == 0x07) // Snow graphic at the beginning of ICZ act 1
    {
        objA0.box_size.y = 0x10
        objA0.box_size.x = 0x18
        objA0.sprite_priority = 0x0180
        objA0.mapping_offset = 0x046b3c
        DrawObject()
    }
    else
    {
        base.OriginsObjects()
        return
    }
}
